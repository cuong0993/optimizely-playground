@using EPiServer.Approvals
@model AlloyDemo.Features.ContentApprovals.ContentApprovalsManagerViewModel
<div>
    <div class="alert alert-info">Managing Content Approvals</div>
    @if (Model.ApprovalDefinition == null)
    {
        <div class="well well-small">
            @Html.ContentLink(
                "Create Approval Definition",
                Model.CurrentPage.ContentLink,
                new {task = "createDefinition"},
                new {@class = "btn"})
        </div>
    }
    else
    {
        if (Model.Approval == null)
        {
            <div class="well well-small">
                @Html.ContentLink(
                    "Modify Start and Request Approval",
                    Model.CurrentPage.ContentLink,
                    new {task = "modifyStart"},
                    new {@class = "btn"})
            </div>
        }
        else
        {
            <div class="well well-small">
                @Html.ContentLink(
                    "Delete All Approvals",
                    Model.CurrentPage.ContentLink,
                    new {task = "deleteApprovals"},
                    new {@class = "btn"})
            </div>
            <h3>Approval</h3>
            <table class="table table-bordered table-condensed">
                <tr>
                    <th>Property</th>
                    <th>Value(s)</th>
                </tr>
                <tr>
                    <td>Started</td>
                    <td>@Model.Approval.Started, By: @Model.Approval.StartedBy, Status: @Model.Approval.Status</td>
                </tr>
                <tr>
                    <td>Steps</td>
                    <td>@Model.Approval.StepCount, Active: @Model.Approval.ActiveStepIndex</td>
                </tr>
                @if (Model.Approval.Completed.HasValue)
                {
                    <tr>
                        <td>Completed</td>
                        <td>
                            @Model.Approval.Completed by @Model.Approval.CompletedBy<br/>
                            <small>@Model.Approval.CompletedComment</small>
                        </td>
                    </tr>
                }
            </table>
        }
        <h3>Approval Definition</h3>
        <table class="table table-bordered table-condensed">
            <tr>
                <th>Property</th>
                <th>Value</th>
            </tr>
            <tr>
                <td>ID</td>
                <td>@Model.ApprovalDefinition.ID</td>
            </tr>
            <tr>
                <td>Reference</td>
                <td>@Model.ApprovalDefinition.Reference</td>
            </tr>
            <tr>
                <td>Steps</td>
                <td>@Model.ApprovalDefinition.Steps.Count</td>
            </tr>
            <tr>
                <td>IsEnabled</td>
                <td>@Model.ApprovalDefinition.IsEnabled</td>
            </tr>
            <tr>
                <td>RequireCommentOnApprove</td>
                <td>@Model.ApprovalDefinition.RequireCommentOnApprove</td>
            </tr>
            <tr>
                <td>RequireCommentOnReject</td>
                <td>@Model.ApprovalDefinition.RequireCommentOnReject</td>
            </tr>
        </table>
        <h4>Approval Steps</h4>
        <table class="table table-bordered table-condensed">
            <tr>
                <th>Step Name</th>
                <th>Reviewers</th>
                <th></th>
            </tr>
            @for (var index = 0; index < Model.ApprovalDefinition.Steps.Count; index++)
            {
                var step = Model.ApprovalDefinition.Steps[index];
                <tr>
                    <td>@step.Name</td>
                    <td>
                        @foreach (var reviewer in step.Reviewers)
                        {
                            <span class="badge badge-warning">@reviewer.ReviewerType: @reviewer.Name</span>
                        }
                    </td>
                    <td>
                        @if (Model.Approval != null)
                        {
                            foreach (var reviewer in step.Reviewers)
                            {
                                if (reviewer.ReviewerType == ApprovalDefinitionReviewerType.User)
                                {
                                    <div class="well well-small">
                                        @Html.ContentLink(
                                            "Approve as " + reviewer.Name,
                                            Model.CurrentPage.ContentLink,
                                            new
                                            {
                                                task = "processStep",
                                                stepIndex = index,
                                                user = reviewer.Name,
                                                decision = "Approve"
                                            },
                                            new {@class = "btn btn-success"})

                                        @Html.ContentLink(
                                            "Decline as " + reviewer.Name,
                                            Model.CurrentPage.ContentLink,
                                            new
                                            {
                                                task = "processStep",
                                                stepIndex = index,
                                                user = reviewer.Name,
                                                decision = "Decline"
                                            },
                                            new {@class = "btn btn-danger"})
                                    </div>
                                }
                            }
                        }
                    </td>
                </tr>
            }
        </table>
    }
</div>